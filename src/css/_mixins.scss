@mixin time-border-utils($long, $width) {
  @each $d in top, right, bottom, left {
    @each $y in top, right, bottom, left {
      .time-border-#{$d}-#{$y} {
        box-sizing: content-box;
        border: solid $width $color1;
        position: absolute;
        #{$d}: $width1;
        #{$y}: $width1;
        @if $d == top {
          width: $long;
        }  @else if $d == bottom {
          width: $long;
        } @else if $d == left {
          height: $long;
        } @else if $d == right {
          height: $long;
        }
      }
    }
  }
}

@mixin apart-utils($apart-long, $apart-width) {
  @each $d in top, right, bottom, left {
    @each $y in top, right, bottom, left {
      .apart-#{$d}-#{$y} {
        box-sizing: content-box;
        border: solid $apart-width $color1;
        position: absolute;
        #{$d}: 0;
        #{$y}: 0;
        @if $d == top {
          width: $apart-long;
        }  @else if $d == bottom {
          width: $apart-long;
        } @else if $d == left {
          height: $apart-long;
        } @else if $d == right {
          height: $apart-long;
        }
      }
    }
  }
}

@mixin apart-long-utils($apart-long, $apart-width) {
  @each $d in top, right, bottom, left {
    @each $y in top, right, bottom, left {
      .apart-long-#{$d}-#{$y} {
        box-sizing: content-box;
        border: solid $apart-width $color1;
        position: absolute;
        #{$d}: 0;
        #{$y}: 0;
        @if $d == top {
          width: 2*$apart-long;
          #{$y}: -$apart-long;
        }  @else if $d == bottom {
          width: $apart-long;
        } @else if $d == left {
          height: $apart-long;
          @if $y == bottom {
            height: 2*$apart-long;
            #{$y}: -$apart-long;
          }
        } @else if $d == right {
          @if $y == bottom {
            height: 2*$apart-long;
            #{$y}: -$apart-long;
          }
        }
      }
    }
  }
}

@mixin manage-long-utils($apart-long, $apart-width) {
  @each $d in top, right, bottom, left {
    @each $y in top, right, bottom, left {
      .manage-long-#{$d}-#{$y} {
        box-sizing: content-box;
        border: solid $apart-width $color1;
        position: absolute;
        #{$d}: 0;
        #{$y}: 0;
        @if $d == top {
          width: $apart-long;
        }  @else if $d == bottom {
          width: 2*$apart-long;
          #{$y}: -$apart-long;
        } @else if $d == left {
          height: $apart-long;
        } @else if $d == right {
          height: 2*$apart-long;
        }
      }
    }
  }
}

@mixin radius-none-utils() {
  @each $d in top, right, bottom, left {
    @each $y in top, right, bottom, left {
      .radius-none-#{$d}-#{$y} {
        border-#{$d}-#{$y}-radius: 0;
      }
    }
  }
}

@mixin border-gradient-utils() {
  @each $d in top, right, bottom, left {
    .border-gradient-#{$d} {
      position: absolute;
      @if $d == top {
        width: 100%;
        height: $width1;
        top: 0;
        background: linear-gradient(to right, rgba(107,216,234,0) 0%, rgba(107,216,234,0.8) 50%, rgba(107,216,234,0) 100%);
      }  @else if $d == bottom {
        width: 100%;
        height: $width1;
        bottom: 0;
        background: linear-gradient(to right, rgba(107,216,234,0) 0%, rgba(107,216,234,0.8) 50%, rgba(107,216,234,0) 100%);
      } @else if $d == left {
        height: 100%;
        width: $width1;
        left: 0;
        top: 0;
        background: linear-gradient(to bottom, rgba(107,216,234,0) 0%,  rgba(107,216,234,0.8) 14px, rgba(107,216,234,0) 80%, rgba(107,216,234,0) 100%);
      }
    }
  }
}

@mixin status-arrow-utils() {
  @each $d in palaver, purpose, arrange, train, use {
    .#{$d}-img {
      background: url("../images/#{$d}_img.png") no-repeat;
    }
    .#{$d}-img.active {
      background: url("../images/#{$d}_active_img.png") no-repeat;
    }
  }
}

@mixin meter-num-utils() {
  @each $d, $color in $meter-num {
    .meter-num-#{$d} {
      color: $color;
      border:solid 1px $color;
      border-bottom: 0;
      font-size: $fs22;
    }
  }
}

@mixin alert-border-utils($long, $width) {
  @each $d in top, right, bottom, left {
    @each $y in top, right, bottom, left {
      .alert-#{$d}-#{$y} {
        box-sizing: content-box;
        border-#{$d}: solid $width $color12;
        border-#{$y}: solid $width $color12;
        position: absolute;
        #{$d}: $long;
        #{$y}: $long;
        width: 2*$long;
        height: 2*$long;
        @if $d == top {
          @if $y == left {
            border-radius: $long 0;
          } @else if $y == right {
            border-radius:  0 $long;
          }
        } @else if $d == bottom {
          @if $y == left {
            border-radius: 0 $long;
          } @else if $y == right {
            border-radius: $long 0;
          }
        }
      }
    }
  }
}

@for $i from 1 through 5 {
  .rotate-img-#{$i} {
    transform:rotate(#{($i - 1) * 36}deg);
  }
  .meter-arrow-#{$i} {
    transform:rotate(#{($i - 1) * 36 + 16}deg);
  }
}

@for $i from 0 through $num-total {
  .num-#{$i} {
    width: 15px;
    height: 25px;
    background: url("../images/num_#{$i}.png") no-repeat;
    background-size: contain;
    display: inline-block;
    vertical-align: middle;
    margin-right: $margin6;
    @if $i == 1 {
      width: 8px;
      height: 25px;
    }
  }
  .status-flex .num-#{$i} {
    width: 12px;
    height: 20px;
    @if $i == 1 {
      width: 6px;
      height: 20px;
    }
  }
}

@for $i from 1 through 4 {
  .half-rect-#{$i} {
    @if $i == 1 {
      background: rgba(0, 0, 0, 0.2);
    } @else if $i == 2 {
      background: rgba(0, 0, 0, 0.5);
    } @else if $i == 3 {
      background: rgba(0, 0, 0, 0.5);
    }

    position: absolute;
    bottom: 0;
    left: 50%;
  }
}


